"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Created by nghinv on Thu Jul 15 2021
 * Copyright (c) 2021 nghinv@lumi.biz
 */
function Overlay(props) {
  const {
    overlayOpacity = 0.6,
    children
  } = props;
  const opacity = (0, _react.useMemo)(() => new _reactNative.Animated.Value(0), []);
  (0, _react.useEffect)(() => {
    _reactNative.Animated.timing(opacity, {
      toValue: overlayOpacity,
      duration: 350,
      useNativeDriver: true
    }).start();
  }, [opacity, overlayOpacity]);

  if (children) {
    return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
      style: styles.container
    }, /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, {
      style: [styles.content, {
        opacity
      }]
    }), children);
  }

  return /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, {
    style: [styles.content2, {
      opacity
    }]
  });
}

const styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  content: { ..._reactNative.StyleSheet.absoluteFillObject,
    backgroundColor: 'black'
  },
  content2: {
    flex: 1,
    backgroundColor: 'black'
  }
});

var _default = /*#__PURE__*/_react.default.memo(Overlay);

exports.default = _default;
//# sourceMappingURL=Overlay.js.map